plugins {
    id 'java'
    id 'application'
}

version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

sourceSets {
    integrationTest {
        java.srcDir file('src/integrationTest/java')
        resources.srcDir file('src/integrationTest/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath += output + compileClasspath
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.1'
    testImplementation "org.mockito:mockito-core:2.+"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.1'
    implementation "org.apache.logging.log4j:log4j-api:2.11.2"
    implementation "org.apache.logging.log4j:log4j-core:2.11.2"
    implementation "com.typesafe:config:1.3.4"
}

application {
    mainClassName = 'SwimJava'
}

run {
    systemProperties System.getProperties()
}

test {
    useJUnitPlatform()
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    mustRunAfter test
}

check.dependsOn integrationTest

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}

